;-------------------------------------------------------------------------------------
;XPU kernel low level library
;;initial:
	;matrixIX:
;array mem[0] = [ 0 1 2 3 4 5 6 7 | 8 9 10 11 12 13 14 15  ]
;array mem[1] = [ 1 2 3 4 5 6 7 8 | 9 10 11 12 13 14 15 16  ]
;array mem[2] = [ 2 3 4 5 6 7 8 9 | 10 11 12 13 14 15 16 17  ]
;array mem[3] = [ 3 4 5 6 7 8 9 10 | 11 12 13 14 15 16 17 18  ]
;array mem[4] = [ 4 5 6 7 8 9 10 11 | 12 13 14 15 16 17 18 19  ]
;array mem[5] = [ 5 6 7 8 9 10 11 12 | 13 14 15 16 17 18 19 20  ]
;array mem[6] = [ 6 7 8 9 10 11 12 13 | 14 15 16 17 18 19 20 21  ]
;array mem[7] = [ 7 8 9 10 11 12 13 14 | 15 16 17 18 19 20 21 22  ]
;array mem[8] = [ 8 9 10 11 12 13 14 15 | 16 17 18 19 20 21 22 23  ]
;array mem[9] = [ 9 10 11 12 13 14 15 16 | 17 18 19 20 21 22 23 24  ]
;array mem[10] = [ 10 11 12 13 14 15 16 17 | 18 19 20 21 22 23 24 25  ]
;array mem[11] = [ 11 12 13 14 15 16 17 18 | 19 20 21 22 23 24 25 26  ]
;array mem[12] = [ 12 13 14 15 16 17 18 19 | 20 21 22 23 24 25 26 27  ]
;array mem[13] = [ 13 14 15 16 17 18 19 20 | 21 22 23 24 25 26 27 28  ]
;array mem[14] = [ 14 15 16 17 18 19 20 21 | 22 23 24 25 26 27 28 29  ]
;array mem[15] = [ 15 16 17 18 19 20 21 22 | 23 24 25 26 27 28 29 30  ]
	;matrix2:
;array mem[16] = [ 2 2 2 2 2 2 2 2 | 2 2 2 2 2 2 2 2  ]
;array mem[17] = [ 3 3 3 3 3 3 3 3 | 3 3 3 3 3 3 3 3  ]
;array mem[18] = [ 4 4 4 4 4 4 4 4 | 4 4 4 4 4 4 4 4  ]
;array mem[19] = [ 5 5 5 5 5 5 5 5 | 5 5 5 5 5 5 5 5  ]
;array mem[20] = [ 6 6 6 6 6 6 6 6 | 6 6 6 6 6 6 6 6  ]
;array mem[21] = [ 7 7 7 7 7 7 7 7 | 7 7 7 7 7 7 7 7  ]
;array mem[22] = [ 8 8 8 8 8 8 8 8 | 8 8 8 8 8 8 8 8  ]
;array mem[23] = [ 9 9 9 9 9 9 9 9 | 9 9 9 9 9 9 9 9  ]
;array mem[24] = [ 10 10 10 10 10 10 10 10 | 10 10 10 10 10 10 10 10  ]
;array mem[25] = [ 11 11 11 11 11 11 11 11 | 11 11 11 11 11 11 11 11  ]
;array mem[26] = [ 12 12 12 12 12 12 12 12 | 12 12 12 12 12 12 12 12  ]
;array mem[27] = [ 13 13 13 13 13 13 13 13 | 13 13 13 13 13 13 13 13  ]
;array mem[28] = [ 14 14 14 14 14 14 14 14 | 14 14 14 14 14 14 14 14  ]
;array mem[29] = [ 15 15 15 15 15 15 15 15 | 15 15 15 15 15 15 15 15  ]
;array mem[30] = [ 16 16 16 16 16 16 16 16 | 16 16 16 16 16 16 16 16  ]
;array mem[31] = [ 17 17 17 17 17 17 17 17 | 17 17 17 17 17 17 17 17  ]
;
;result:
;array mem[32] = [ 2 3 4 5 6 7 8 9 | 10 11 12 13 14 15 16 17  ]
;array mem[33] = [ 4 5 6 7 8 9 10 11 | 12 13 14 15 16 17 18 19  ]
;array mem[34] = [ 6 7 8 9 10 11 12 13 | 14 15 16 17 18 19 20 21  ]
;array mem[35] = [ 8 9 10 11 12 13 14 15 | 16 17 18 19 20 21 22 23  ]
;array mem[36] = [ 10 11 12 13 14 15 16 17 | 18 19 20 21 22 23 24 25  ]
;array mem[37] = [ 12 13 14 15 16 17 18 19 | 20 21 22 23 24 25 26 27  ]
;array mem[38] = [ 14 15 16 17 18 19 20 21 | 22 23 24 25 26 27 28 29  ]
;array mem[39] = [ 16 17 18 19 20 21 22 23 | 24 25 26 27 28 29 30 31  ]
;array mem[40] = [ 18 19 20 21 22 23 24 25 | 26 27 28 29 30 31 32 33  ]
;array mem[41] = [ 20 21 22 23 24 25 26 27 | 28 29 30 31 32 33 34 35  ]
;array mem[42] = [ 22 23 24 25 26 27 28 29 | 30 31 32 33 34 35 36 37  ]
;array mem[43] = [ 24 25 26 27 28 29 30 31 | 32 33 34 35 36 37 38 39  ]
;array mem[44] = [ 26 27 28 29 30 31 32 33 | 34 35 36 37 38 39 40 41  ]
;array mem[45] = [ 28 29 30 31 32 33 34 35 | 36 37 38 39 40 41 42 43  ]
;array mem[46] = [ 30 31 32 33 34 35 36 37 | 38 39 40 41 42 43 44 45  ]
;array mem[47] = [ 32 33 34 35 36 37 38 39 | 40 41 42 43 44 45 46 47  ]
;-------------------------------------------------------------------------------------

func testForFullSquareMatrixAdd
label0:
				nop				activate
				sel_addrreg 0	scannop
				
		generateFullSquareMatrixIX(-1)
		
		generateFullSquareMatrix(15, 2)
				
				cc_start_w_halt	nop
								
;matrixAdd 
				vload 15		vload  -1	; $ARRAY_NR_CELLS-1
				store 0			addrstore
				nop				nop
				
		label5:	nop				riload 1
				nop				radd 16		; $ARRAY_NR_CELLS
				brnzdec label5	rstore 32	; 2*$ARRAY_NR_CELLS
;end matrixAdd cc = 52

				cc_stop			nop
				
				setint			nop
				halt			nop
endfunc

;-------------------------------------------------------------------------------------



