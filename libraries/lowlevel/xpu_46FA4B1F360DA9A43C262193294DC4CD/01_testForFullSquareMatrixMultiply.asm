;-------------------------------------------------------------------------------------
;XPU kernel low level library
;
;initial:
	;matrixIX:
;array mem[1] = [ 0 1 2 3 4 5 6 7 | 8 9 10 11 12 13 14 15  ]
;array mem[2] = [ 1 2 3 4 5 6 7 8 | 9 10 11 12 13 14 15 16  ]
;array mem[3] = [ 2 3 4 5 6 7 8 9 | 10 11 12 13 14 15 16 17  ]
;array mem[4] = [ 3 4 5 6 7 8 9 10 | 11 12 13 14 15 16 17 18  ]
;array mem[5] = [ 4 5 6 7 8 9 10 11 | 12 13 14 15 16 17 18 19  ]
;array mem[6] = [ 5 6 7 8 9 10 11 12 | 13 14 15 16 17 18 19 20  ]
;array mem[7] = [ 6 7 8 9 10 11 12 13 | 14 15 16 17 18 19 20 21  ]
;array mem[8] = [ 7 8 9 10 11 12 13 14 | 15 16 17 18 19 20 21 22  ]
;array mem[9] = [ 8 9 10 11 12 13 14 15 | 16 17 18 19 20 21 22 23  ]
;array mem[10] = [ 9 10 11 12 13 14 15 16 | 17 18 19 20 21 22 23 24  ]
;array mem[11] = [ 10 11 12 13 14 15 16 17 | 18 19 20 21 22 23 24 25  ]
;array mem[12] = [ 11 12 13 14 15 16 17 18 | 19 20 21 22 23 24 25 26  ]
;array mem[13] = [ 12 13 14 15 16 17 18 19 | 20 21 22 23 24 25 26 27  ]
;array mem[14] = [ 13 14 15 16 17 18 19 20 | 21 22 23 24 25 26 27 28  ]
;array mem[15] = [ 14 15 16 17 18 19 20 21 | 22 23 24 25 26 27 28 29  ]
;array mem[16] = [ 15 16 17 18 19 20 21 22 | 23 24 25 26 27 28 29 30  ]
	;matrix2:
;array mem[17] = [ 2 2 2 2 2 2 2 2 | 2 2 2 2 2 2 2 2  ]
;array mem[18] = [ 3 3 3 3 3 3 3 3 | 3 3 3 3 3 3 3 3  ]
;array mem[19] = [ 4 4 4 4 4 4 4 4 | 4 4 4 4 4 4 4 4  ]
;array mem[20] = [ 5 5 5 5 5 5 5 5 | 5 5 5 5 5 5 5 5  ]
;array mem[21] = [ 6 6 6 6 6 6 6 6 | 6 6 6 6 6 6 6 6  ]
;array mem[22] = [ 7 7 7 7 7 7 7 7 | 7 7 7 7 7 7 7 7  ]
;array mem[23] = [ 8 8 8 8 8 8 8 8 | 8 8 8 8 8 8 8 8  ]
;array mem[24] = [ 9 9 9 9 9 9 9 9 | 9 9 9 9 9 9 9 9  ]
;array mem[25] = [ 10 10 10 10 10 10 10 10 | 10 10 10 10 10 10 10 10  ]
;array mem[26] = [ 11 11 11 11 11 11 11 11 | 11 11 11 11 11 11 11 11  ]
;array mem[27] = [ 12 12 12 12 12 12 12 12 | 12 12 12 12 12 12 12 12  ]
;array mem[28] = [ 13 13 13 13 13 13 13 13 | 13 13 13 13 13 13 13 13  ]
;array mem[29] = [ 14 14 14 14 14 14 14 14 | 14 14 14 14 14 14 14 14  ]
;array mem[30] = [ 15 15 15 15 15 15 15 15 | 15 15 15 15 15 15 15 15  ]
;array mem[31] = [ 16 16 16 16 16 16 16 16 | 16 16 16 16 16 16 16 16  ]
;array mem[32] = [ 17 17 17 17 17 17 17 17 | 17 17 17 17 17 17 17 17  ]
;
;result:
;array mem[33] = [ 240 272 304 336 368 400 432 464 | 496 528 560 592 624 656 688 720  ]
;array mem[34] = [ 360 408 456 504 552 600 648 696 | 744 792 840 888 936 984 1032 1080  ]
;array mem[35] = [ 480 544 608 672 736 800 864 928 | 992 1056 1120 1184 1248 1312 1376 1440  ]
;array mem[36] = [ 600 680 760 840 920 1000 1080 1160 | 1240 1320 1400 1480 1560 1640 1720 1800  ]
;array mem[37] = [ 720 816 912 1008 1104 1200 1296 1392 | 1488 1584 1680 1776 1872 1968 2064 2160  ]
;array mem[38] = [ 840 952 1064 1176 1288 1400 1512 1624 | 1736 1848 1960 2072 2184 2296 2408 2520  ]
;array mem[39] = [ 960 1088 1216 1344 1472 1600 1728 1856 | 1984 2112 2240 2368 2496 2624 2752 2880  ]
;array mem[40] = [ 1080 1224 1368 1512 1656 1800 1944 2088 | 2232 2376 2520 2664 2808 2952 3096 3240  ]
;array mem[41] = [ 1200 1360 1520 1680 1840 2000 2160 2320 | 2480 2640 2800 2960 3120 3280 3440 3600  ]
;array mem[42] = [ 1320 1496 1672 1848 2024 2200 2376 2552 | 2728 2904 3080 3256 3432 3608 3784 3960  ]
;array mem[43] = [ 1440 1632 1824 2016 2208 2400 2592 2784 | 2976 3168 3360 3552 3744 3936 4128 4320  ]
;array mem[44] = [ 1560 1768 1976 2184 2392 2600 2808 3016 | 3224 3432 3640 3848 4056 4264 4472 4680  ]
;array mem[45] = [ 1680 1904 2128 2352 2576 2800 3024 3248 | 3472 3696 3920 4144 4368 4592 4816 5040  ]
;array mem[46] = [ 1800 2040 2280 2520 2760 3000 3240 3480 | 3720 3960 4200 4440 4680 4920 5160 5400  ]
;array mem[47] = [ 1920 2176 2432 2688 2944 3200 3456 3712 | 3968 4224 4480 4736 4992 5248 5504 5760  ]
;array mem[48] = [ 2040 2312 2584 2856 3128 3400 3672 3944 | 4216 4488 4760 5032 5304 5576 5848 6120  ]
;-------------------------------------------------------------------------------------

func testForFullSquareMatrixMultiply
label0:
				nop				activate
				sel_addrreg 0	scannop
				
				generateFullSquareMatrixIX(0)
			
				generateFullSquareMatrix(16, 2)
				
				cc_start_w_halt	nop
								
;matrixMultiply 
				vload 1			vload  $ARRAY_NR_CELLS	
				store 0			addrstore	
				nop				scanadd
				vload 15		crload
				store 1			store 0
	;main loop
		label4:	store 1			nop
				vload 17		riload 0
	 ;inner loop
		label3:	left_redins     mult 0
				brnzdec label3	riload -1
	 ;end inner loop
				left_redins		riload 18
				load 0			nop
				vadd 16			srload
				vsub 15			crstore
				store 0			crload
				load 1			store 0
				brnzdec label4	nop
	;end main loop
;end matrixMultiply (726 cycles)

				cc_stop			nop
				
				setint			nop
				halt			nop
endfunc

;-------------------------------------------------------------------------------------



