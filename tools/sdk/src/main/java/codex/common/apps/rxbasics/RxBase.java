//-------------------------------------------------------------------------------------
package codex.common.apps.rxbasics;
//-------------------------------------------------------------------------------------

import codex.common.utils.Debug;
import codex.common.utils.ExceptionUtils;
import io.reactivex.rxjava3.disposables.Disposable;
import java.io.Serializable;
import org.apache.logging.log4j.Logger;

//-------------------------------------------------------------------------------------
public class RxBase implements Runnable, Serializable {

    protected transient Debug debug;
    protected transient Logger log;
    private Thread thisThread;

//-------------------------------------------------------------------------------------
    public RxBase(Logger _log) {
        log = _log;
    }

//-------------------------------------------------------------------------------------
    public RxBase(Debug _debug) {
        debug = _debug;
    }

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
    public Logger getDebug() {
        return log;
    }

//-------------------------------------------------------------------------------------
    public void setDebug(Logger _log) {
        log = _log;
    }

//-------------------------------------------------------------------------------------
    public void setDebug(Debug _debug) {
        debug = _debug;
    }

//-------------------------------------------------------------------------------------
    public Thread getThisThread() {
        return thisThread;
    }

//-------------------------------------------------------------------------------------
    public void init() {
        thisThread = new Thread(this);
//      return thisThread;
    }

//-------------------------------------------------------------------------------------
    public void start() {
        start(null);
    }

//-------------------------------------------------------------------------------------
    public void start(String _name) {
        if (thisThread == null) {
            init();
        }
        if (_name != null) {
            thisThread.setName(_name);
        }
        thisThread.start();
//      return thisThread;
    }

//-------------------------------------------------------------------------------------
    public void run() {
    }

//-------------------------------------------------------------------------------------
    public void interrupt() {
        thisThread.interrupt();
    }

//-------------------------------------------------------------------------------------
    protected void delay(int _delay) {
        try {
            Thread.sleep(_delay);
        } catch (InterruptedException _e1) {

        }
    }

//-------------------------------------------------------------------------------------
    public void onError(Throwable _t) {
        ExceptionUtils.printException(log, this, _t);
    }

//-------------------------------------------------------------------------------------
    public void onCompleted() {
        log.info("onCompleted:");
    }

//-------------------------------------------------------------------------------------
    public void onSubscribe(Disposable _disposable) {
        log.info("onSubscribe:");
    }

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
    public void load() {
    }

//-------------------------------------------------------------------------------------
    public void load5() {
    }

//-------------------------------------------------------------------------------------
    public void save() {
        if (thisThread != null) {
            thisThread.interrupt();
        }
    }

//-------------------------------------------------------------------------------------
}
//-------------------------------------------------------------------------------------
