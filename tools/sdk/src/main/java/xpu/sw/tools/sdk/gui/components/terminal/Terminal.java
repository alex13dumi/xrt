//-------------------------------------------------------------------------------------
package xpu.sw.tools.sdk.gui.components.terminal;

//-------------------------------------------------------------------------------------
import java.awt.*;
import java.io.*;
import java.net.*;
import java.util.*;
import javax.swing.*;

import org.apache.commons.configuration2.*;
import org.apache.logging.log4j.*;
import org.apache.logging.log4j.core.*;
import org.apache.logging.log4j.core.appender.*;
import org.apache.logging.log4j.core.config.*;
import org.apache.logging.log4j.core.layout.*;
import org.apache.logging.log4j.core.appender.rolling.*;

import xpu.sw.tools.sdk.common.context.*;

import xpu.sw.tools.sdk.gui.*;
import xpu.sw.tools.sdk.gui.components.common.buttons.*;

//-------------------------------------------------------------------------------------
public class Terminal extends javax.swing.JPanel {
    private Gui gui;
    private Context context;
    private org.apache.logging.log4j.Logger log;
    private ConsoleAppender consoleAppender;

    private org.apache.commons.configuration2.Configuration sdkConfig;

//-------------------------------------------------------------------------------------
    public Terminal(Gui _gui, Context _context) {

        gui = _gui;
        context = _context;
        log = _context.getLog();
        initComponents();
        gui.getTerminal().add(this);
        sdkConfig = context.getSdkConfig();
        setVisible(true);
        init();
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();

        setAutoscrolls(true);
        setMinimumSize(new java.awt.Dimension(87, 250));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(811, 100));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(87, 200));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(811, 600));
        jTabbedPane1.setVerifyInputWhenFocusTarget(false);

        jPanel1.setMaximumSize(null);
        jPanel1.setPreferredSize(null);
        jPanel1.setRequestFocusEnabled(false);
        jPanel1.setVerifyInputWhenFocusTarget(false);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(255, 255, 204));
        jTextArea1.setRows(5);
        jTextArea1.setMinimumSize(null);
        jScrollPane1.setViewportView(jTextArea1);

        jTextField1.setText(">");
        jTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
            .addComponent(jTextField1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jTabbedPane1.addTab("Console", jPanel1);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Errors", jPanel2);

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Warnings", jPanel3);

        add(jTabbedPane1);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

//-------------------------------------------------------------------------------------
    private void init(){


         LoggerContext ctx = (LoggerContext) LogManager.getContext(false);
        org.apache.logging.log4j.core.config.Configuration sdkConfig = ctx.getConfiguration();

        PatternLayout layout = PatternLayout.newBuilder()
          .withConfiguration(sdkConfig)
          .withPattern("%d{HH:mm:ss.SSS}: %msg%n")
          .build();


        RollingFileAppender appender = RollingFileAppender.newBuilder()
          .setConfiguration(sdkConfig)
          .setName("sdk")
          .setLayout(layout)
          .withFileName(context.getPathToSdkHome() + "/logs/sdk.log")
          .withFilePattern(context.getPathToSdkHome() + "/logs/terminal.log")
          .withPolicy(SizeBasedTriggeringPolicy.createPolicy("10KB"))
          .build();

          if(appender != null){
                appender.start();
                sdkConfig.addAppender(appender);
          }

       LoggerConfig loggerConfig = sdkConfig.getLoggerConfig("sdk") ;
       loggerConfig.addAppender(appender, null, null);

        jTextArea1.setLineWrap(true);
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setEditable (false);
        jTextArea1.setFont(new Font("Courier", Font.PLAIN, 12));


        consoleAppender = new ConsoleAppender(jTextArea1, jScrollPane1);
        consoleAppender.start();
        sdkConfig.addAppender(consoleAppender);
        loggerConfig.addAppender(consoleAppender, null, null);

    }

//-------------------------------------------------------------------------------------
    public ConsoleAppender getConsoleAppender(){
        return consoleAppender;
    }
    public void setConsoleAppender(ConsoleAppender consoleAppender){
        this.consoleAppender=consoleAppender;
    }

    
//-------------------------------------------------------------------------------------
}
//-------------------------------------------------------------------------------------
